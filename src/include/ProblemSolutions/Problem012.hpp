/*
	The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. 
	
	The first ten terms would be:

	1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
	
	Let us list the factors of the first seven triangle numbers:
	
	 1: 1
	 3: 1,3
	 6: 1,2,3,6
	10: 1,2,5,10
	15: 1,3,5,15
	21: 1,3,7,21
	28: 1,2,4,7,14,28
	
	We can see that 28 is the first triangle number to have over five divisors.
	
	What is the value of the first triangle number to have over five hundred divisors?
*/

#include <iostream>
#include <cstdint>
#include <cmath>

uint16_t GetNumDivisors (double n)
{
	uint16_t divisors = 0;
	
	for ( double i=1.0; i<n+1.0; i++ )
	{
		if ( fmod(n,i)==0.0 ) divisors++;
	}
	
	return divisors;	
}

bool Problem12 ()
{
	double n=1000.0, Tn=0.0;
	bool num_found = false;
	uint16_t divisors;
	
	while ( !num_found )
	{
		n++;
		Tn = (n*(n+1.0))/2.0;
		
		divisors = GetNumDivisors (Tn);
		
		if ( divisors > 499 ) num_found = true;
		
		std::cout << "n = " << n << ", Tn = " << Tn << ", divisors = " << divisors << "\n";
	}
	
	std::cout << "\nProblem 012: " << "\n";
	return true;
}
