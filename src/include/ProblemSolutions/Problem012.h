/*
	The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. 
	
	The first ten terms would be:

	1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
	
	Let us list the factors of the first seven triangle numbers:
	
	 1: 1
	 3: 1,3
	 6: 1,2,3,6
	10: 1,2,5,10
	15: 1,3,5,15
	21: 1,3,7,21
	28: 1,2,4,7,14,28
	
	We can see that 28 is the first triangle number to have over five divisors.
	
	What is the value of the first triangle number to have over five hundred divisors?
*/

#include <iostream>
#include <cstdint>
#include <vector>

#ifndef _GETNUMDIVISORS_
#include "..//OtherFunctions//GetNumDivisors.h"
#endif


bool Problem12 ()
{
	uint16_t ans = 0;
	uint32_t n = 0, Tn = 0;

	while (ans < 500)
	{
		n++;
		Tn = ((n)*(n + 1))/2;		

		if (Tn%2 == 0 && Tn%3 ==0 && Tn%5 == 0 && Tn%7 == 0)
			ans = GetNumDivisors(Tn);
	}

	std::cout << "\nProblem 012: " << Tn << "\n";
	return true;
}
